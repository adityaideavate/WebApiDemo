@model BookMyTicket.ViewModel.MovieViewModel

@{
    ViewBag.Title = "EditMovieForm";
}




@using (Html.BeginForm("EditMovie","Movie", FormMethod.Post, new {id = "EditMovieId"}  ))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h2>Edit Movie</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.movie.MovieId)

       

        <div class="form-group">
            @Html.LabelFor(model => model.movie.MovieName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.movie.MovieName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.movie.MovieName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.movie.DateRelease, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.movie.DateRelease, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.movie.DateRelease, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.movie.DateEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.movie.DateEnd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.movie.DateEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.movie.LanguageId, "LanguageId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.movie.LanguageId, new SelectList(Model.languagelist, "LanguageId", "LanguageName"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.movie.LanguageId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.movie.GenreId, "GenreId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.movie.GenreId, new SelectList(Model.genrelist, "GenreId", "GenreName"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.movie.GenreId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.movie.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.movie.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.movie.Description, "", new { @class = "text-danger" })
            </div>
        </div>

      

      

        
      @Html.HiddenFor(model=>model.movie.MoviePic)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" id="EditMovieBtnId"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {


            
            //$('#EditMovieId').submit(function () {
            //    $("#EditMovieBtnId")
            //      .val("Please Wait...")
            //      .attr('disabled', 'disabled'); 

            //    return true;
            //});

        

        });

</script>
}
